---
title: "Mulheres no Trânsito Brasileiro"
format: onsvpub-html
author: 
  - Pedro Augusto Borges dos Santos
date: last-modified
bibliography: references.bib
editor_options: 
  chunk_output_type: inline
---

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(arrow)
library(janitor)
library(roadtrafficdeaths)
library(onsvplot)
library(plotly)
library(glue)
library(scales)
```

```{r}
#| label: load-data
#| include: false

prf_arrow <- here::here("data", "prf_vitimas", "ano=2023")

prf_vitimas_2023 <- open_dataset(prf_arrow)

prf_condutores_2023 <- prf_vitimas_2023 |> 
  select(
    id, pesid, uf, tipo_acidente, fase_dia, 
    tipo_veiculo, tipo_envolvido, sexo, estado_fisico
  ) |> 
  filter(tipo_envolvido == "Condutor") |> 
  mutate(
    regiao = case_when(
      uf %in% c("AM", "RR", "AP", "PA", "TO", "RO", "AC") ~ "Norte",
      uf %in% c(
        "MA", "PI", "CE", "RN", "PB", "PE", "AL", "SE", "BA"
      ) ~ "Nordeste",
      uf %in% c("MT", "MS", "GO", "DF") ~ "Centro-Oeste",
      uf %in% c("SP", "RJ", "MG", "ES") ~ "Sudeste",
      uf %in% c("PR", "RS", "SC") ~ "Sul",
      TRUE ~ NA_character_
    ),
    estado_fisico = if_else(
      estado_fisico %in% c("Ferido Grave", "Ferido Leve"),
      "Ferido",
      estado_fisico
    )
  ) |> 
  collect()

renach_path <- list.files(
  here::here("data"), 
  pattern = "^condutores", 
  full.names = TRUE
)

renach_years <- seq(2018, 2023) |> as.character()

renach_list <- map(renach_path, read_csv2)

add_year <- function(df, year) {
  df |> 
    mutate(ano = year)
}

renach <- map2(renach_list, renach_years, add_year) |> 
  reduce(bind_rows)

renach_grouped <- renach |> 
  clean_names() |> 
  select(regiao_habilitacao_atual, sexo, categoria, qt_condutor_historico) |> 
  group_by(regiao_habilitacao_atual, sexo, categoria) |> 
  summarise(qtde_condutor = sum(qt_condutor_historico))

obitos2022 <- rtdeaths |> 
  as_tibble() |> 
  filter(ano_ocorrencia == 2022)
```

## Introdução

Dados do ano de 2023.

## Vítimas fatais

### Pirâmide etária

```{r}
#| label: fig-piramide-etaria
#| echo: false
#| fig-cap: "Pirâmide etária das vítimas fatais no trânsito em 2022"

tbl_piramide <- obitos2022 |> 
  count(sexo_vitima, faixa_etaria_vitima) |> 
  drop_na() |> 
  mutate(
    n = ifelse(sexo_vitima == "Feminino", n = -1 * n, n),
    hovertext = glue("Sexo: {sexo_vitima}\nFaixa etária: {faixa_etaria_vitima}\nQuantidade de óbitos: {abs(n)}")
  )

piramide_plot <- 
  ggplot(
    tbl_piramide, 
    aes(x = n, y = faixa_etaria_vitima, fill = sexo_vitima)
  ) +
  geom_col(aes(text = hovertext)) +
  scale_x_continuous(
    limits = c(-4000, 4000),
    labels = c(4000, 2000, 0, 2000, 4000),
    minor_breaks = NULL
  ) +
  scale_fill_manual(values = c(onsv_palette$blue, onsv_palette$yellow)) +
  labs(x = NULL, y = NULL, fill = "Sexo da vítima:") +
  theme_minimal()

ggplotly(piramide_plot, tooltip = "text")

```

### Modal e faixa etária

```{r}
#| label: heatmap-modal
#| echo: false

tbl_masc <- obitos2022 |> 
  filter(sexo_vitima == "Masculino") |> 
  count(modal_vitima, faixa_etaria_vitima, .drop = FALSE) |> 
  replace_na(list(n = 0)) |> 
  drop_na() |> 
  mutate(
    hovertext = glue(
      "Modal: {modal_vitima}\nFaixa etária: {faixa_etaria_vitima}\nQuantidade de óbitos: {abs(n)}"
    )
  )

tbl_fem <- obitos2022 |> 
  filter(sexo_vitima == "Feminino") |> 
  count(modal_vitima, faixa_etaria_vitima, .drop = FALSE) |> 
  replace_na(list(n = 0)) |> 
  drop_na() |>
  mutate(
    hovertext = glue(
      "Modal: {modal_vitima}\nFaixa etária: {faixa_etaria_vitima}\nQuantidade de óbitos: {abs(n)}"
    )
  )

label_faixa_etaria <- c(
  "0-4", "5-9", "10-14", "15-19", "20-24", "25-29", "30-34", "35-39", "40-44",
  "45-49", "50-54", "55-59", "60-64", "65-69", "70-74", "75-79", "80+"
)
```

::: {.panel-tabset}

## Masculino

```{r}
#| label: fig-heatmap-modal-masc
#| fig-cap: "Quantidade de óbitos por modal e faixa etária (masc.)"
#| echo: false

heat_masc <- 
  ggplot(tbl_masc, aes(x = faixa_etaria_vitima, y = modal_vitima, fill = n)) +
  geom_tile() +
  geom_text(
    aes(label = n),
    color = ifelse(
      tbl_masc$n > 1000,
      "grey90",
      "grey20"
    ),
    size = 3
  ) +
  theme_minimal(base_size = 10) +
  labs(x = "Faixa etária", y = NULL) +
  theme(
    legend.position = "none",
    panel.grid.major.x = element_blank(),
    panel.grid.major.y = element_blank()
  ) +
  scale_fill_gradient(
    high = onsv_palette$yellow,
    low = "#f7dbb9"
  ) +
  scale_x_discrete(labels = label_faixa_etaria) +
  coord_equal()

ggplotly(heat_masc, tooltip = c("x", "y", "fill"))
```

## Feminino

```{r}
#| label: fig-heatmap-modal-fem
#| fig-cap: "Quantidade de óbitos por modal e faixa etária (fem.)"
#| echo: false

heat_fem <- 
  ggplot(tbl_fem, aes(x = faixa_etaria_vitima, y = modal_vitima, fill = n)) +
  geom_tile() +
  geom_text(
    aes(label = n),
    color = ifelse(
      tbl_fem$n > 150,
      "grey90",
      "grey20"
    ),
    size = 3
  ) +
  theme_minimal(base_size = 10) +
  labs(x = "Faixa etária", y = NULL) +
  theme(
    legend.position = "none",
    panel.grid.major.x = element_blank(),
    panel.grid.major.y = element_blank()
  ) +
  scale_fill_gradient(high = onsv_palette$blue, low = "#a2c6d8") +
  scale_x_discrete(labels = label_faixa_etaria) +
  coord_equal()

ggplotly(heat_fem, tooltip = c("x", "y", "fill"))
```

:::

## Condutores Habilitados

Fonte: @ministériodostransportes2024

### Evolução

```{r}
renach |> 
  summarise(.by = c(ano, Sexo), condutores = sum(`Qt. Condutor Histórico`)) |> 
  ggplot(aes(ano, condutores)) +
    geom_col(aes(fill = Sexo), position = "dodge")

renach |> 
  summarise(.by = c(ano, Sexo), condutores = sum(`Qt. Condutor Histórico`)) |> 
  pivot_wider(names_from = Sexo, values_from = condutores) |> 
  mutate(Masculino = Masculino - lag(Masculino),
         Feminino = Feminino - lag(Feminino)) |> 
  pivot_longer(c(Masculino, Feminino), names_to = "sexo",
               values_to = "condutores") |> 
  drop_na() |> 
  ggplot(aes(ano, condutores)) +
    geom_col(aes(fill = sexo), position = "dodge")

renach |> 
  summarise(.by = c(ano, Sexo, `Faixa Etária`), condutores = sum(`Qt. Condutor Histórico`)) |> 
  mutate(faixa_etaria = as_factor(`Faixa Etária`),
         ano = as.numeric(ano)) |>  
  ggplot(aes(ano, condutores, color = faixa_etaria)) +
    geom_line() +
    geom_point() +
    facet_wrap(vars(Sexo)) +
    theme_minimal() +
    theme(panel.spacing = unit(0.5, "cm"))
```


```{r}
evol_cond <- renach |>
  rename(regiao = `Região Habilitação Atual`,
         condutores = `Qt. Condutor Histórico`) |>
  mutate(ano = as.numeric(ano)) |>
  summarise(.by = c(ano, Sexo, regiao),
            condutores = sum(condutores)) |>
  ggplot(aes(ano, condutores, color = regiao)) +
  geom_line() +
  geom_point(aes(text = paste0(
    "Condutores: ", format(condutores, big.mark = ".")
  ))) +
  facet_wrap(vars(Sexo), ) +
  scale_y_continuous(labels = label_comma(big.mark = ".",
                                          decimal.mark = ",")) +
  labs(y = "Condutores", x = NULL, color = "Região") +
  scale_color_manual(values = as_vector(unname(onsv_palette))) +
  theme_minimal()

ggplotly(evol_cond, tooltip = "text")
```


<!-- ```{r} -->
<!-- #| label: cnh-categoria -->
<!-- #| echo: false -->

<!-- tbl_categoria <- renach_grouped_2023 |>  -->
<!--   group_by(sexo, categoria) |>  -->
<!--   summarise(qtde_condutor = sum(qtde_condutor)) |>  -->
<!--   pivot_wider(names_from = sexo, values_from = qtde_condutor) |>  -->
<!--   mutate( -->
<!--     total = Feminino + Masculino, -->
<!--     perc_fem = scales::percent(Feminino / (total), accuracy = 1), -->
<!--     perc_masc = scales::percent(Masculino / (total), accuracy = 1), -->
<!--   ) |>  -->
<!--   select(categoria, Feminino, Masculino, perc_fem, perc_masc, total) |>  -->
<!--   ungroup() -->

<!-- knitr::kable( -->
<!--   tbl_categoria, -->
<!--   format.args = list(big.mark = ".", decimal.mark = ","), -->
<!--   format = "pipe", -->
<!--   digits = 0, -->
<!--   col.names = c( -->
<!--     "Categoria", "Feminino", "Masculino", "% Feminino", "% Masculino", "Total" -->
<!--   ), -->
<!--   caption = "Quantidade de Condutores Habilitados em 2023, por categoria" -->
<!-- )  -->
<!-- ``` -->

### Quantidade Atual

## Condutores Envolvidos em Sinistros de Trânsito em Rodovias Federais

<!-- Fonte: @políciarodoviáriafederal2024 -->

### Transporte geral

<!-- ```{r} -->
<!-- #| label: prf-count -->
<!-- #| echo: false -->

<!-- prf_count <- prf_condutores_2023 |>  -->
<!--   count(sexo) |>  -->
<!--   drop_na() |>  -->
<!--   mutate( -->
<!--     percentual = n / sum(n), -->
<!--     percentual = scales::percent(percentual, accuracy = 1) -->
<!--   ) -->

<!-- knitr::kable( -->
<!--   prf_count, -->
<!--   format.args = list(big.mark = ".", decimal.mark = ","), -->
<!--   col.names = c( -->
<!--     "Gênero", -->
<!--     "Quantidade de condutores envolvidos", -->
<!--     "Percentual" -->
<!--   ), -->
<!--   caption = "Quantidade de Condutores Envolvidos em Sinistros de Trânsito - Rodovias Federais" -->
<!-- ) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- #| label: prf-regiao -->
<!-- #| echo: false -->

<!-- prf_regiao <- prf_condutores_2023 |>  -->
<!--   count(sexo, regiao) |>  -->
<!--   drop_na() |> -->
<!--   pivot_wider(names_from = sexo, values_from = n) |>  -->
<!--   mutate( -->
<!--     total = Feminino + Masculino, -->
<!--     perc_fem = scales::percent(Feminino / (total), accuracy = 1), -->
<!--     perc_masc = scales::percent(Masculino / (total), accuracy = 1), -->
<!--   ) |>  -->
<!--   select( -->
<!--     regiao, Feminino, Masculino, perc_fem, perc_masc, total -->
<!--   ) -->

<!-- knitr::kable( -->
<!--   prf_regiao, -->
<!--   format.args = list(big.mark = ".", decimal.mark = ","), -->
<!--   col.names = c( -->
<!--     "Região", -->
<!--     "Feminino", -->
<!--     "Masculino", -->
<!--     "% Feminino", -->
<!--     "% Masculino", -->
<!--     "Total" -->
<!--   ), -->
<!--   caption = "Quantidade de Condutores Envolvidos em Sinistros de Trânsito, por Região - Rodovias Federais" -->
<!-- ) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- #| label: prf-lesoes -->
<!-- #| echo: false -->

<!-- prf_lesoes <- prf_condutores_2023 |>  -->
<!--   count(sexo, estado_fisico) |>  -->
<!--   drop_na() |>  -->
<!--   pivot_wider(names_from = sexo, values_from = n) |>  -->
<!--   mutate( -->
<!--     perc_fem = Feminino / sum(Feminino), -->
<!--     perc_fem = scales::percent(perc_fem, accuracy = 1), -->
<!--     perc_masc = Masculino / sum(Masculino), -->
<!--     perc_masc = scales::percent(perc_masc, accuracy = 1) -->
<!--   ) -->

<!-- knitr::kable( -->
<!--   prf_lesoes, -->
<!--   format.args = list(big.mark = ".", decimal.mark = ","), -->
<!--   col.names = c( -->
<!--     "Tipo de lesão", -->
<!--     "Feminino", -->
<!--     "Masculino", -->
<!--     "% por tipo (Fem.)", -->
<!--     "% por tipo (Masc.)" -->
<!--   ), -->
<!--   caption = "Quantidade de Condutores Envolvidos em Sinistros de Trânsito, por tipo de lesão - Rodovias Federais" -->
<!-- ) -->
<!-- ``` -->

### Transporte de Cargas

<!-- Sinistros de trânsito envolvendo mulheres motoristas de transporte de cargas (Caminhão + Caminhão Trator) -->

<!-- ```{r} -->
<!-- #| label: carga-lesoes -->
<!-- #| echo: false -->

<!-- prf_carga <- prf_condutores_2023 |>  -->
<!--   filter( -->
<!--     sexo == "Feminino", tipo_veiculo %in% c("caminhão", "caminhão-trator") -->
<!--   ) -->

<!-- prf_carga |>  -->
<!--   count(estado_fisico) |>  -->
<!--   knitr::kable( -->
<!--     col.names = c("Tipo de lesão", "Quantidade de condutoras envolvidas"), -->
<!--     caption = "Quantidade de condutoras envolvidas em sinistros de trânsito - tipo de lesão" -->
<!--   ) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- #| label: carga-tipo -->
<!-- #| echo: false -->

<!-- prf_carga |>  -->
<!--   count(tipo_acidente, sort = TRUE) |>  -->
<!--   knitr::kable( -->
<!--     col.names = c("Tipo de sinistro", "Quantidade de condutoras envolvidas"), -->
<!--     caption = "Quantidade de condutoras envolvidas - tipo de sinistro" -->
<!--   ) -->
<!-- ``` -->

### Transporte de Passageiros

<!-- Sinistros de trânsito envolvendo mulheres motoristas de transporte de passageiros (Ônibus + Microônibus) -->

<!-- ```{r} -->
<!-- #| label: passageiro-lesoes -->
<!-- #| echo: false -->

<!-- prf_passageiro <- prf_condutores_2023 |>  -->
<!--   filter( -->
<!--     sexo == "Feminino", tipo_veiculo %in% c("ônibus", "microônibus") -->
<!--   ) -->

<!-- prf_passageiro |>  -->
<!--   count(estado_fisico) |>  -->
<!--   knitr::kable( -->
<!--     col.names = c("Tipo de lesão", "Quantidade de condutoras envolvidas"), -->
<!--     caption = "Quantidade de condutoras envolvidas em sinistros de trânsito - tipo de lesão" -->
<!--   ) -->
<!-- ``` -->


<!-- ```{r} -->
<!-- #| label: passageiro-tipo -->
<!-- #| echo: false -->

<!-- prf_passageiro |>  -->
<!--   count(tipo_acidente, sort = TRUE) |>  -->
<!--   knitr::kable( -->
<!--     col.names = c("Tipo de sinistro", "Quantidade de condutoras envolvidas"), -->
<!--     caption = "Quantidade de condutoras envolvidas - tipo de sinistro" -->
<!--   ) -->
<!-- ``` -->

## Referências {.unnumbered}
