---
title: "Mulheres no Trânsito Brasileiro"
title-block-banner: true
format: onsvpub-html
author: 
  - Pedro Augusto Borges dos Santos
  - João Pedro Melani Saraiva
date: last-modified
bibliography: references.bib
csl: associacao-brasileira-de-normas-tecnicas.csl
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(arrow)
library(janitor)
library(roadtrafficdeaths)
library(onsvplot)
library(plotly)
library(glue)
library(scales)
library(gt)

options(scipen = 99999999)
```

```{r}
#| label: load-data
#| include: false

prf_arrow <- here::here("data", "prf_vitimas", "ano=2023")

prf_vitimas_2023 <- open_dataset(prf_arrow)

prf_condutores_2023 <- prf_vitimas_2023 |> 
  select(
    id, pesid, uf, tipo_acidente, fase_dia, 
    tipo_veiculo, tipo_envolvido, sexo, estado_fisico
  ) |> 
  filter(tipo_envolvido == "Condutor") |> 
  mutate(
    regiao = case_when(
      uf %in% c("AM", "RR", "AP", "PA", "TO", "RO", "AC") ~ "Norte",
      uf %in% c(
        "MA", "PI", "CE", "RN", "PB", "PE", "AL", "SE", "BA"
      ) ~ "Nordeste",
      uf %in% c("MT", "MS", "GO", "DF") ~ "Centro-Oeste",
      uf %in% c("SP", "RJ", "MG", "ES") ~ "Sudeste",
      uf %in% c("PR", "RS", "SC") ~ "Sul",
      TRUE ~ NA_character_
    ),
    estado_fisico = if_else(
      estado_fisico %in% c("Ferido Grave", "Ferido Leve"),
      "Ferido",
      estado_fisico
    )
  ) |> 
  collect()

renach_path <- list.files(
  here::here("data"), 
  pattern = "^condutores", 
  full.names = TRUE
)

renach_years <- seq(2018, 2023) |> as.character()

renach_list <- map(renach_path, read_csv2)

add_year <- function(df, year) {
  df |> 
    mutate(ano = year)
}

renach <- map2(renach_list, renach_years, add_year) |> 
  reduce(bind_rows)

renach_grouped <- renach |> 
  clean_names() |> 
  group_by(regiao_habilitacao_atual, sexo, categoria, ano) |> 
  summarise(qtde_condutor = sum(qt_condutor_historico))

obitos2022 <- rtdeaths |> 
  as_tibble() |> 
  filter(ano_ocorrencia == 2022)
```

## Introdução

O presente relatório inclui um conjunto de dados ilustrando algumas diferenças entre a presença das mulheres e dos homens no trânsito brasileiro. A seguir, a @sec-vítimas-fatais inclui dados sobre as vítimas fatais no trânsito brasileiro; a @sec-condutores-habilitados traz dados sobre a quantidade de condutores habilitados nos últimos anos e a @sec-prf apresenta dados sobre condutores envolvidos em sinistros de trânsito em rodovias federais.

Todos os dados e código utilizado nesse relatório estão disponibilizados no respectivo [repositório](https://github.com/ONSV/analise-mulheres-transito){target="_blank"} do GitHub do Observatório.

## Vítimas fatais {#sec-vítimas-fatais}

Os dados sobre as vítimas fatais no trânsito brasileiro foram extraídas do Sistema de Informações de Mortalidade (SIM) do @ministériodasaúde2019, considerando o ano de 2022 -- o último com os dados consolidados até a publicação deste conteúdo. Os dados foram coletados com auxílio do pacote `microdatasus` [@saldanha2019] e armazenados pelo pacote `roadtrafficdeaths` [@santosRoadtrafficdeathsRoadTraffic2023].

### Pirâmide etária

```{r}
#| label: calc-vitimas
#| echo: false

obitos_totais <- nrow(obitos2022)

obitos_mulher <- length(obitos2022$sexo_vitima[obitos2022$sexo_vitima == "Feminino"])

percentual_mulher <- scales::percent(obitos_mulher / obitos_totais)

obitos_mulher_20_24 <- obitos2022 |> 
  filter(sexo_vitima == "Feminino") |> 
  count(faixa_etaria_vitima) |> 
  pull(n) |> 
  max()

```

O gráfico da @fig-piramide-etaria a seguir apresenta a pirâmide etária das vítimas fatais no trânsito brasileiro em 2022, agrupados a partir de duas características: faixa etária e sexo da vítima.

Das `r obitos_totais` vítimas fatais de 2022, `r percentual_mulher` eram do sexo feminino. A principal faixa etária das vítimas do sexo feminino é a de idade entre 20 e 24 anos, com `r obitos_mulher_20_24` óbitos.

```{r}
#| label: fig-piramide-etaria
#| echo: false
#| fig-cap: "Pirâmide etária das vítimas fatais no trânsito em 2022"

tbl_piramide <- obitos2022 |> 
  count(sexo_vitima, faixa_etaria_vitima) |> 
  drop_na() |> 
  mutate(
    n = ifelse(sexo_vitima == "Feminino", n = -1 * n, n),
    hovertext = glue("Sexo: {sexo_vitima}\nFaixa etária: {faixa_etaria_vitima}\nQuantidade de óbitos: {abs(n)}")
  )

piramide_plot <- 
  ggplot(
    tbl_piramide, 
    aes(x = n, y = faixa_etaria_vitima, fill = sexo_vitima)
  ) +
  geom_col(aes(text = hovertext)) +
  scale_x_continuous(
    limits = c(-4000, 4000),
    labels = c(4000, 2000, 0, 2000, 4000),
    minor_breaks = NULL
  ) +
  scale_fill_manual(values = c(onsv_palette$blue, onsv_palette$yellow)) +
  labs(x = NULL, y = NULL, fill = "Sexo da vítima:") +
  theme_minimal()

ggplotly(piramide_plot, tooltip = "text")

```

### Modo de transporte e faixa etária

Os gráficos da @fig-heatmap-modal-masc e @fig-heatmap-modal-fem apresentam a quantidade de vítimas fatais, com agrupamento por faixa etária e modo de transporte da vítima. Considerando as vítimas do sexo feminino, o principal grupo de vítimas são as ocupantes de motocicleta com idade entre 20 e 24, somando uma quantidade de 245 óbitos. Outro grupo de destaque são as ocupantes de automóvel entre 25 e 34 anos e as pedestres acima de 60 anos de idade.

```{r}
#| label: heatmap-modal
#| echo: false

tbl_masc <- obitos2022 |> 
  filter(sexo_vitima == "Masculino") |> 
  count(modal_vitima, faixa_etaria_vitima, .drop = FALSE) |> 
  replace_na(list(n = 0)) |> 
  drop_na() |> 
  mutate(
    hovertext = glue(
      "Modal: {modal_vitima}\nFaixa etária: {faixa_etaria_vitima}\nQuantidade de óbitos: {abs(n)}"
    )
  )

tbl_fem <- obitos2022 |> 
  filter(sexo_vitima == "Feminino") |> 
  count(modal_vitima, faixa_etaria_vitima, .drop = FALSE) |> 
  replace_na(list(n = 0)) |> 
  drop_na() |>
  mutate(
    hovertext = glue(
      "Modal: {modal_vitima}\nFaixa etária: {faixa_etaria_vitima}\nQuantidade de óbitos: {abs(n)}"
    )
  )

label_faixa_etaria <- c(
  "0-4", "5-9", "10-14", "15-19", "20-24", "25-29", "30-34", "35-39", "40-44",
  "45-49", "50-54", "55-59", "60-64", "65-69", "70-74", "75-79", "80+"
)
```

::: panel-tabset
## Masculino

```{r}
#| label: fig-heatmap-modal-masc
#| fig-cap: "Quantidade de óbitos por modal e faixa etária (masc.)"
#| echo: false

heat_masc <- 
  ggplot(tbl_masc, aes(x = faixa_etaria_vitima, y = modal_vitima, fill = n)) +
  geom_tile() +
  geom_text(
    aes(label = n),
    color = ifelse(
      tbl_masc$n > 1000,
      "grey90",
      "grey20"
    ),
    size = 3
  ) +
  theme_minimal(base_size = 10) +
  labs(x = "Faixa etária", y = NULL) +
  theme(
    legend.position = "none",
    panel.grid.major.x = element_blank(),
    panel.grid.major.y = element_blank()
  ) +
  scale_fill_gradient(
    high = onsv_palette$yellow,
    low = "#f7dbb9"
  ) +
  scale_x_discrete(labels = label_faixa_etaria) +
  coord_equal()

ggplotly(heat_masc, tooltip = c("x", "y", "fill"))
```

## Feminino

```{r}
#| label: fig-heatmap-modal-fem
#| fig-cap: "Quantidade de óbitos por modal e faixa etária (fem.)"
#| echo: false

heat_fem <- 
  ggplot(tbl_fem, aes(x = faixa_etaria_vitima, y = modal_vitima, fill = n)) +
  geom_tile() +
  geom_text(
    aes(label = n),
    color = ifelse(
      tbl_fem$n > 150,
      "grey90",
      "grey20"
    ),
    size = 3
  ) +
  theme_minimal(base_size = 10) +
  labs(x = "Faixa etária", y = NULL) +
  theme(
    legend.position = "none",
    panel.grid.major.x = element_blank(),
    panel.grid.major.y = element_blank()
  ) +
  scale_fill_gradient(high = onsv_palette$blue, low = "#a2c6d8") +
  scale_x_discrete(labels = label_faixa_etaria) +
  coord_equal()

ggplotly(heat_fem, tooltip = c("x", "y", "fill"))
```
:::

## Condutores habilitados {#sec-condutores-habilitados}

Essa seção contém a apresentação de alguns dados relacionados à quantidade de condutores habilitados, registrados pelo Registro Nacional de Condutores Habilitados (RENACH). Todos os dados apresentados aqui foram extraídos do RENACH [@ministériodostransportes2024].

### Evolução

Considerando o período de 6 anos entre 2018 e 2023, houve um aumento de aproximadamente 20% na quantidade de condutoras habilitadas. Considerando o mesmo período, houve um aumento de aproximadamente 13% na quantidade de condutores habilitados (@fig-evolucao-total).

```{r}
#| label: fig-evolucao-total
#| echo: false
#| fig-cap: "Quantidade total de condutores por ano"

plot_evo_total <- renach_grouped |> 
  group_by(ano, sexo) |> 
  summarise(qtde_condutor = sum(qtde_condutor)) |> 
  mutate(
    hovertext = glue("Sexo: {sexo}\nAno {ano}\nQuantidade: {qtde_condutor}")
  ) |> 
  ggplot(aes(ano, qtde_condutor, fill = sexo)) +
  geom_col(aes(text = hovertext), position = "dodge") +
  theme_onsv() +
  labs(x = NULL, y = NULL) +
  scale_fill_manual(values = c(onsv_palette$blue, onsv_palette$yellow)) +
  theme(panel.grid.major.x = element_blank())

ggplotly(plot_evo_total, tooltip = "text")
```

A @fig-evo-delta apresenta apenas a quantidade de novos condutores registrados, considerando o período entre 2019 e 2023. De modo absoluto, a quantidade de novos condutores do sexo masculino ainda é maior do que a quantidade de condutores do sexo feminino.

```{r}
#| label: fig-evo-delta
#| echo: false
#| fig-cap: "Quantidade de novos condutores registrados por ano"

plot_evo_delta <- renach_grouped |> 
  group_by(ano, sexo) |> 
  summarise(qtde_condutor = sum(qtde_condutor)) |> 
  ungroup() |> 
  group_by(sexo) |> 
  mutate(
    delta_condutores = qtde_condutor - lag(qtde_condutor),
    hovertext = glue("Sexo: {sexo}\nAno {ano}\nQuantidade: {delta_condutores}")
  ) |> 
  drop_na() |> 
  ggplot(aes(x = ano, y = delta_condutores)) +
  geom_col(aes(fill = sexo, text = hovertext), position = "dodge") +
  theme_onsv() +
  labs(x = NULL, y = NULL) +
  scale_fill_manual(values = c(onsv_palette$blue, onsv_palette$yellow)) +
  theme(panel.grid.major.x = element_blank())

ggplotly(plot_evo_delta, tooltip = "text")
  
```

A análise da quantidade de condutores ao longo dos anos também é possível de ser feita com base nas categorias de cada CNH (@fig-condutor-categoria). Tanto para os homens quanto as mulheres, há um aumento percentual na categoria AB (Moto / Carro). No caso das condutoras, houve uma variação de 26% para 29%. A categoria B representa uma maior proporção considerando os condutores do sexo feminino. Em 2018, essa categoria representava quase 70%, com uma redução para 67% em 2023.

```{r}
#| label: fig-condutor-categoria
#| echo: false
#| fig-cap: "Quantidade percentual de condutores por categoria da CNH"

renach_categorias <- renach_grouped |> 
  mutate(
    categoria = case_match(
      categoria,
      c("AC-Condutor Moto/Caminhão", "XC-Condutor Ciclomotor/Caminhão") ~
        "C-Condutor Caminhão",
      c("AD-Condutor Moto/Ônibus", "XD-Condutor Ciclomotor/Ônibus") ~
        "D-Condutor Ônibus",
      c("AE-Condutor Moto/Carreta", "XE-Condutor Ciclomotor/Carreta") ~
        "E-Condutor Carreta",
      "XB-Condutor Ciclomotor/Carro" ~ "B-Condutor Carro",
      .default = categoria
    )
  )

renach_categorias |> 
  group_by(ano, sexo, categoria) |> 
  summarise(qtde_condutor = sum(qtde_condutor)) |> 
  filter(categoria != "X-Condutor Ciclomotor") |> 
  group_by(ano, sexo) |> 
  mutate(
    perc = scales::percent(qtde_condutor / sum(qtde_condutor), accuracy = 1)
  ) |> 
  view()

plot_categorias_cond <- renach_categorias |> 
  group_by(ano, sexo, categoria) |> 
  summarise(qtde_condutor = sum(qtde_condutor)) |> 
  filter(categoria != "X-Condutor Ciclomotor") |> 
  group_by(ano, sexo) |> 
  mutate(
    perc = scales::percent(
      qtde_condutor / sum(qtde_condutor),
      accuracy = 0.01
    ),
    hovertext = glue(
      "Ano: {ano}\n",
      "Categoria: {categoria}\n",
      "Quantidade: {qtde_condutor}\n",
      "Percentual: {perc}"
    )
  ) |> 
  ggplot(aes(x = ano, y = qtde_condutor, fill = categoria)) +
  geom_col(position = "fill", aes(text = hovertext)) +
  facet_wrap(~sexo) +
  labs(x = NULL, y = NULL) + 
  scale_y_continuous(labels = scales::percent_format()) +
  theme_onsv() +
  scale_fill_manual(values = as_vector(unname(onsv_palette)))

ggplotly(plot_categorias_cond, tooltip = "text")
```

**Observações**:

-   A Categoria "X - Ciclomotor" foi desconsiderada na análise
-   A Categoria C inclui também as categorias AC e XC
-   A Categoria D inclui também as categorias AD e XD
-   A Categoria E inclui também as categorias AE e XE

### Cenário atual

Considerando apenas a quantidade de condutores habilitados em 2023, a @fig-piramide-condutores apresenta esses valores, classificados por sexo do condutor e faixa etária. Ao todo, 36% dos condutores são do sexo feminino, com a maior parte se encontrando nas faixas etárias entre 31 - 40 anos e 41 - 50 anos.

```{r}
#| label: fig-piramide-condutores
#| echo: false
#| fig-cap: "Quantidade de condutores por sexo e faixa etária em 2023"

tbl_cond_piramide <- renach |> 
  clean_names() |> 
  filter(ano == 2023) |> 
  mutate(
    faixa_etaria = if_else(
      faixa_etaria %in% c("81 a 90", "91 a 100", "101 a 120", "Mais de 120"),
      "Mais de 80",
      faixa_etaria
    )
  ) |> 
  group_by(sexo, faixa_etaria) |> 
  summarise(qtde = sum(qt_condutor_historico)) |> 
  mutate(
    qtde = if_else(sexo == "Masculino", qtde * -1, qtde),
    hovertext = glue(
      "Sexo: {sexo}\n",
      "Faixa etária: {faixa_etaria}\n",
      "Quantidade: {abs(qtde)}"
    )
  )

plot_piramide_condutores <- 
  ggplot(tbl_cond_piramide, aes(x = qtde, y = faixa_etaria, fill = sexo)) +
  geom_col(aes(text = hovertext)) +
  theme_onsv() +
  scale_x_continuous(
    limits = c(-15000000, 15000000) ,
    labels = c(15000000, 10000000, 0, 10000000, 15000000)
  ) +
  scale_fill_manual(values = c(onsv_palette$blue, onsv_palette$yellow)) +
  labs(x = NULL, y = NULL)

ggplotly(plot_piramide_condutores, tooltip = "text")
```

Os gráficos da @fig-heatmap-condutores-masc e @fig-heatmap-condutores-fem apresentam a quantidade proporcional de condutores, considerando a categoria da CNH e a faixa etária. No caso dos condutores do sexo masculino, a maior proporção se encontra na categoria AB (moto / carro), na faixa de idade entre 31 e 40 anos. Já no caso do sexo feminino, a maior proporção se encontra na categoria B, com idade entre 41 e 50 anos. Observa-se a baixa quantidade de habilitadas nas categorias C, D e E, em comparação com os condutores do sexo masculino.

::: panel-tabset
## Masculino

```{r}
#| label: fig-heatmap-condutores-masc
#| echo: false
#| fig-cap: "Porcentagem de condutoras por tipo de CNH e faixa etária"

tbl_heatmap_condutores_masc <- renach |> 
  clean_names() |> 
  filter(ano == 2023, sexo == "Masculino") |> 
  mutate(
    faixa_etaria = if_else(
      faixa_etaria %in% c("81 a 90", "91 a 100", "101 a 120", "Mais de 120"),
      "Mais de 80",
      faixa_etaria
    ),
    categoria = case_match(
      categoria,
      c("AC-Condutor Moto/Caminhão", "XC-Condutor Ciclomotor/Caminhão") ~
        "C-Condutor Caminhão",
      c("AD-Condutor Moto/Ônibus", "XD-Condutor Ciclomotor/Ônibus") ~
        "D-Condutor Ônibus",
      c("AE-Condutor Moto/Carreta", "XE-Condutor Ciclomotor/Carreta") ~
        "E-Condutor Carreta",
      "XB-Condutor Ciclomotor/Carro" ~ "B-Condutor Carro",
      .default = categoria
    )
  ) |> 
  group_by(faixa_etaria, categoria) |> 
  summarise(n = sum(qt_condutor_historico)) |> 
  filter(categoria != "X-Condutor Ciclomotor") |> 
  ungroup() |> 
  mutate(
    perc = n / sum(n),
    perc_label = scales::percent(
      perc,
      accuracy = 0.1,
      decimal.mark = ",",
      big.mark = "."
    )
  )

heat_masc_cond <- 
  ggplot(
    tbl_heatmap_condutores_masc,
    aes(x = faixa_etaria, y = categoria)
  ) +
  geom_tile(fill = onsv_palette$yellow, aes(alpha = perc)) +
  geom_text(
    aes(label = perc_label),
    color = "grey20"
  ) +
  coord_fixed() +
  theme_onsv() + 
  labs(x = NULL, y = NULL) +
  theme(
    legend.position = "none",
    panel.grid = element_blank()
  )

ggplotly(heat_masc_cond, tooltip = c("x", "y"))
```

## Feminino

```{r}
#| label: fig-heatmap-condutores-fem
#| echo: false
#| fig-cap: "Porcentagem de condutoras por tipo de CNH e faixa etária"

tbl_heatmap_condutores_fem <- renach |> 
  clean_names() |> 
  filter(ano == 2023, sexo == "Feminino") |> 
  mutate(
    faixa_etaria = if_else(
      faixa_etaria %in% c("81 a 90", "91 a 100", "101 a 120", "Mais de 120"),
      "Mais de 80",
      faixa_etaria
    ),
    categoria = case_match(
      categoria,
      c("AC-Condutor Moto/Caminhão", "XC-Condutor Ciclomotor/Caminhão") ~
        "C-Condutor Caminhão",
      c("AD-Condutor Moto/Ônibus", "XD-Condutor Ciclomotor/Ônibus") ~
        "D-Condutor Ônibus",
      c("AE-Condutor Moto/Carreta", "XE-Condutor Ciclomotor/Carreta") ~
        "E-Condutor Carreta",
      "XB-Condutor Ciclomotor/Carro" ~ "B-Condutor Carro",
      .default = categoria
    )
  ) |> 
  group_by(faixa_etaria, categoria) |> 
  summarise(n = sum(qt_condutor_historico)) |> 
  filter(categoria != "X-Condutor Ciclomotor") |> 
  ungroup() |> 
  mutate(
    perc = n / sum(n),
    perc_label = scales::percent(
      perc,
      accuracy = 0.1,
      decimal.mark = ",",
      big.mark = "."
    )
  )

heat_fem_cond <- 
  ggplot(
    tbl_heatmap_condutores_fem,
    aes(x = faixa_etaria, y = categoria)
  ) +
  geom_tile(fill = onsv_palette$blue, aes(alpha = perc)) +
  geom_text(
    aes(label = perc_label),
    color = ifelse(
      tbl_heatmap_condutores_fem$perc > 0.1,
      "grey90",
      "grey20"
    )
  ) +
  coord_fixed() +
  theme_onsv() + 
  labs(x = NULL, y = NULL) +
  theme(
    legend.position = "none",
    panel.grid = element_blank()
  )

ggplotly(heat_fem_cond, tooltip = c("x", "y"))
```
:::

**Observações**:

-   Valores em 0,0% representam baixas quantidades
-   A Categoria "X - Ciclomotor" foi desconsiderada na análise
-   A Categoria C inclui também as categorias AC e XC
-   A Categoria D inclui também as categorias AD e XD
-   A Categoria E inclui também as categorias AE e XE

## Condutores envolvidos em sinistros em rodovias federais {#sec-prf}

<!-- Fonte: @políciarodoviáriafederal2024 -->

Esta seção inclui dados de sinistros em rodovias federais fornecidos pelo Portal de Dados Abertos da Polícia Rodoviária Federal [@políciarodoviáriafederal2024]. Desta forma, a base de dados agrupada por pessoa possibilita a extração dos casos de condutores envolvidos em sinistros em rodovias federais para o ano de 2023.

### Transporte geral

A @fig-prf-geral inclui a quantidade de condutores envolvidos em sinistros,  considerando o sexo do condutor, tipo de sinistro e estado físico do condutor após a ocorrência. A @tbl-prf-geral indica os valores totais para ambos os sexos considerando o estado físico, bem como a taxa de óbitos sobre ao número de envolvidos totais.

::: panel-tabset

## Gráfico

```{r}
#| echo: false
#| fig-cap: "Quantidade de condutores envolvidos, considerando o sexo, tipo de sinistro e estado físico do condutor"
#| label: fig-prf-geral

heat_prf_geral <-
  prf_condutores_2023 |>
  summarise(.by = c(tipo_acidente, sexo, estado_fisico),
            n = n()) |>
  drop_na(sexo, tipo_acidente) |>
  complete(
    tipo_acidente = prf_condutores_2023$tipo_acidente,
    sexo = prf_condutores_2023$sexo,
    estado_fisico = prf_condutores_2023$estado_fisico,
    fill = list(n = 0)
  ) |>
  arrange(sexo, tipo_acidente, estado_fisico) |>
  drop_na() |>
  mutate(tipo_acidente = str_to_title(tipo_acidente)) |>
  ggplot(aes(
    estado_fisico,
    tipo_acidente,
    fill = sexo,
    alpha = factor(n)
  )) +
  geom_tile() +
  geom_text(aes(
    label = n,
    color = ifelse(n > 1000 & sexo == "Feminino",
                   "grey90", "black")
  ),
  size = 3,
  alpha = 1) +
  facet_wrap(vars(sexo)) +
  scale_color_identity() +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "none", panel.grid.major = element_blank()) +
  scale_fill_manual(values = as_vector(unname(onsv_palette)))

ggplotly(heat_prf_geral, tooltip = c("x", "y", "fill")) |>
  style(hoverinfo = "none", traces = 1:96)
```

## Tabela

```{r}
#| echo: false
#| tbl-cap: Estado físico dos condutores
#| label: tbl-prf-geral

prf_condutores_2023 |>
  summarise(.by = c(sexo, estado_fisico), n = n()) |>
  drop_na() |>
  pivot_wider(names_from = estado_fisico, values_from = n) |>
  mutate(
    Total = Ferido + Ileso + `Óbito`,
    `Óbitos por N° de Envolvidos` = round(`Óbito` / Total, 4)
  ) |> 
  pivot_longer(-sexo, names_to = "Estado Físico") |> 
  pivot_wider(names_from = sexo, values_from = value) |> 
  gt() |> 
  tab_options(
    column_labels.background.color = onsv_palette$blue,
    column_labels.font.weight = "bold"
  ) |> 
  fmt_integer(rows = everything(), sep_mark = ".") |> 
  fmt_percent(rows = last_col(), dec_mark = ",")
```
:::

A **colisão traseira** e a **colisão transversal** aparentam ser os sinistros mais frequentes em ambos os sexos, porém a **colisão frontal** é claramente o tipo de sinistro mais fatal, atingindo 43,3% e 36,4% do total de óbitos registrados para mulheres e homens respectivamente.

<!-- Outra forma de analisar a influência do sexo sobre a ocorrência de certa categoria de sinistro é demonstrada na @fig-prf-taxa, com a taxa de óbitos por sexo e tipo de sinistro sobre a quantidade total de vítimas: -->

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| fig-cap: Taxa de óbitos por sexo e tipo de sinistro por óbitos totais em sinistros rodoviários -->
<!-- #| label: fig-prf-taxa -->

<!-- plot_modal <-  -->
<!--   prf_condutores_2023 |>  -->
<!--   count(sexo, tipo_acidente, estado_fisico) |>  -->
<!--   complete( -->
<!--     tipo_acidente = prf_condutores_2023$tipo_acidente, -->
<!--     sexo = prf_condutores_2023$sexo, -->
<!--     estado_fisico = prf_condutores_2023$estado_fisico, -->
<!--     fill = list(n = 0) -->
<!--   ) |>  -->
<!--   drop_na() |>  -->
<!--   pivot_wider(names_from = estado_fisico, values_from = n) |>  -->
<!--   mutate(tipo_acidente = str_to_title(tipo_acidente), -->
<!--          taxa = `Óbito`/sum(`Óbito`)) |>  -->
<!--   ggplot(aes(taxa, tipo_acidente, fill = sexo)) + -->
<!--     geom_bar(stat = "identity", position = "dodge", -->
<!--              aes(text = glue("Taxa: {round(taxa * 100, 2)}%<br>Tipo de Acidente: {tipo_acidente}<br>Sexo: {sexo}"))) + -->
<!--     labs(y = NULL, x = "Taxa de Óbitos por Óbitos Totais", fill = NULL) + -->
<!--     scale_x_continuous(labels = percent_format()) + -->
<!--     scale_fill_manual(values = as_vector(unname(onsv_palette))) + -->
<!--     theme_minimal() + -->
<!--     theme(panel.grid = element_blank()) -->

<!-- ggplotly(plot_modal, tooltip = "text") -->
<!-- ``` -->

### Transporte de cargas

A @fig-prf-carga e a @tbl-prf-carga representam novamente a quantidade de condutores envolvidos em sinistros, porém, considerando apenas os condutores de **caminhões** e **caminhões-tratores**.

Os dados apresentam um comportamento similar à análise anterior, com destaque para os tipos de sinistros **tombamento** e **saída de leito carroçavel**, sendo sinistros comuns para este tipo de modal. Para o transporte de carga, a quantidade de condutoras do sexo feminino soma menos de 1% da quantidade de condutores do sexo masculino.

::: panel-tabset
## Gráfico

```{r}
#| echo: false
#| fig-cap: "Quantidade de condutores envolvidos em sinistros com transporte de carga, considerando o sexo, tipo de sinistro e estado físico do condutor"
#| label: fig-prf-carga

heat_prf_transp <-
  prf_condutores_2023 |>
  filter(tipo_veiculo %in% c("caminhão", "caminhão-trator")) |> 
  summarise(.by = c(tipo_acidente, sexo, estado_fisico),
            n = n()) |>
  drop_na(sexo, tipo_acidente) |>
  complete(
    tipo_acidente = prf_condutores_2023$tipo_acidente,
    sexo = prf_condutores_2023$sexo,
    estado_fisico = prf_condutores_2023$estado_fisico,
    fill = list(n = 0)
  ) |>
  arrange(sexo, tipo_acidente, estado_fisico) |>
  drop_na() |>
  mutate(tipo_acidente = str_to_title(tipo_acidente)) |>
  ggplot(aes(
    estado_fisico,
    tipo_acidente,
    fill = sexo,
    alpha = factor(n)
  )) +
  geom_tile() +
  geom_text(aes(
    label = n,
    color = ifelse(n > 1000 & sexo == "Feminino",
                   "grey90", "black")
  ),
  size = 3,
  alpha = 1) +
  facet_wrap(vars(sexo)) +
  scale_color_identity() +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "none", panel.grid.major = element_blank()) +
  scale_fill_manual(values = as_vector(unname(onsv_palette)))

ggplotly(heat_prf_transp, tooltip = c("x", "y", "fill")) |>
  style(hoverinfo = "none", traces = 1:96)
```

## Tabela

```{r}
#| echo: false
#| tbl-cap: Estado físico dos condutores de transporte de cargas
#| label: tbl-prf-carga

prf_condutores_2023 |>
  filter(tipo_veiculo %in% c("caminhão", "caminhão-trator")) |> 
  summarise(.by = c(sexo, estado_fisico), n = n()) |>
  drop_na() |>
  pivot_wider(names_from = estado_fisico, values_from = n) |>
  mutate(
    Total = Ferido + Ileso + `Óbito`,
    `Óbitos por N° de Envolvidos` = round(`Óbito` / Total, 4)
  ) |> 
  pivot_longer(-sexo, names_to = "Estado Físico") |> 
  pivot_wider(names_from = sexo, values_from = value) |> 
  gt() |> 
  tab_options(
    column_labels.background.color = onsv_palette$blue,
    column_labels.font.weight = "bold"
  ) |> 
  fmt_integer(rows = everything(), sep_mark = ".") |> 
  fmt_percent(rows = last_col(), dec_mark = ",")
```
:::

### Transporte de passageiros

Por fim, a mesma análise foi aplicada considerando os condutores do transporte de passageiros, filtrando para os veículos **ônibus** e **microônibus**. A diferença entre os sexos observado beste cenário é provalmente em razão da escassa participação de mulheres neste modal, assim como observado no transporte de cargas. Em 2023, nenhuma vítima ferida ou fatal do sexo feminino foi registrada no âmbito de rodovias federais, conforme observado na @tbl-prf-pass. 

::: panel-tabset
## Gráfico

```{r}
#| echo: false
#| fig-cap: Gráfico para condutores de transporte de passageiros
#| label: fig-prf-pass

heat_prf_pass <- 
  prf_condutores_2023 |>
  filter(tipo_veiculo %in% c("ônibus", "microônibus")) |> 
  summarise(.by = c(tipo_acidente, sexo, estado_fisico),
            n = n()) |>
  drop_na(sexo, tipo_acidente) |>
  complete(
    tipo_acidente = prf_condutores_2023$tipo_acidente,
    sexo = prf_condutores_2023$sexo,
    estado_fisico = prf_condutores_2023$estado_fisico,
    fill = list(n = 0)
  ) |>
  arrange(sexo, tipo_acidente, estado_fisico) |>
  drop_na() |>
  mutate(tipo_acidente = str_to_title(tipo_acidente)) |>
  ggplot(aes(
    estado_fisico,
    tipo_acidente,
    fill = sexo,
    alpha = factor(n)
  )) +
  geom_tile() +
  geom_text(aes(
    label = n,
    color = ifelse(n > 1000 & sexo == "Feminino",
                   "grey90", "black")
  ),
  size = 3,
  alpha = 1) +
  facet_wrap(vars(sexo)) +
  scale_color_identity() +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "none", panel.grid.major = element_blank()) +
  scale_fill_manual(values = as_vector(unname(onsv_palette)))

ggplotly(heat_prf_pass, tooltip = c("x", "y", "fill")) |>
  style(hoverinfo = "none", traces = 1:96)
```

## Tabela

```{r}
#| echo: false
#| tbl-cap: Tabela de estado físico de condutores de transporte de passageiros
#| label: tbl-prf-pass

prf_condutores_2023 |>
  filter(tipo_veiculo %in% c("ônibus", "microônibus")) |>
  summarise(.by = c(sexo, estado_fisico), n = n()) |>
  drop_na() |>
  pivot_wider(names_from = estado_fisico, values_from = n) |>
  mutate(across(everything(), ~replace_na( ., 0))) |>  
  mutate(
    Total = Ferido + Ileso + `Óbito`,
    `Óbitos por N° de Envolvidos` = round(`Óbito` / Total, 4)
  ) |>
  pivot_longer(-sexo, names_to = "Estado Físico") |> 
  pivot_wider(names_from = sexo, values_from = value) |> 
  gt() |> 
  tab_options(
    column_labels.background.color = onsv_palette$blue,
    column_labels.font.weight = "bold"
  ) |> 
  fmt_integer(rows = everything(), sep_mark = ".") |> 
  fmt_percent(rows = last_col(), dec_mark = ",")
```
:::

## Referências {.unnumbered}
