---
title: "Mulheres no Trânsito Brasileiro"
title-block-banner: true
format: onsvpub-html
author: 
  - Pedro Augusto Borges dos Santos
  - João Pedro Melani Saraiva
date: last-modified
bibliography: references.bib
editor_options: 
  chunk_output_type: inline
---

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(arrow)
library(janitor)
library(roadtrafficdeaths)
library(onsvplot)
library(plotly)
library(glue)
library(scales)
library(gt)
<<<<<<< HEAD

options(scipen = 99999999)
=======
>>>>>>> 4566c6f4f3601fd8efbca3dc12d35be578718562
```

```{r}
#| label: load-data
#| include: false

prf_arrow <- here::here("data", "prf_vitimas", "ano=2023")

prf_vitimas_2023 <- open_dataset(prf_arrow)

prf_condutores_2023 <- prf_vitimas_2023 |> 
  select(
    id, pesid, uf, tipo_acidente, fase_dia, 
    tipo_veiculo, tipo_envolvido, sexo, estado_fisico
  ) |> 
  filter(tipo_envolvido == "Condutor") |> 
  mutate(
    regiao = case_when(
      uf %in% c("AM", "RR", "AP", "PA", "TO", "RO", "AC") ~ "Norte",
      uf %in% c(
        "MA", "PI", "CE", "RN", "PB", "PE", "AL", "SE", "BA"
      ) ~ "Nordeste",
      uf %in% c("MT", "MS", "GO", "DF") ~ "Centro-Oeste",
      uf %in% c("SP", "RJ", "MG", "ES") ~ "Sudeste",
      uf %in% c("PR", "RS", "SC") ~ "Sul",
      TRUE ~ NA_character_
    ),
    estado_fisico = if_else(
      estado_fisico %in% c("Ferido Grave", "Ferido Leve"),
      "Ferido",
      estado_fisico
    )
  ) |> 
  collect()

renach_path <- list.files(
  here::here("data"), 
  pattern = "^condutores", 
  full.names = TRUE
)

renach_years <- seq(2018, 2023) |> as.character()

renach_list <- map(renach_path, read_csv2)

add_year <- function(df, year) {
  df |> 
    mutate(ano = year)
}

renach <- map2(renach_list, renach_years, add_year) |> 
  reduce(bind_rows)

renach_grouped <- renach |> 
  clean_names() |> 
  select(regiao_habilitacao_atual, sexo, categoria, qt_condutor_historico) |> 
  group_by(regiao_habilitacao_atual, sexo, categoria) |> 
  summarise(qtde_condutor = sum(qt_condutor_historico))

obitos2022 <- rtdeaths |> 
  as_tibble() |> 
  filter(ano_ocorrencia == 2022)
```

## Introdução

O presente relatório inclui um conjunto de dados ilustrando algumas diferenças entre a presença das mulheres e dos homens no trânsito brasileiro. A seguir, a @sec-vítimas-fatais inclui dados sobre as vítimas fatais no trânsito brasileiro; a @sec-condutores-habilitados traz dados sobre a quantidade de condutores habilitados nos últimos anos e a @sec-prf apresenta dados sobre condutores envolvidos em sinistros de trânsito em rodovias federais.

Todos os dados e código utilizado nesse relatório estão disponibilizados no respectivo [repositório](https://github.com/ONSV/analise-mulheres-transito){target="_blank"} do GitHub do Observatório.

## Vítimas fatais {#sec-vítimas-fatais}

Os dados sobre as vítimas fatais no trânsito brasileiro foram extraídas do Sistema de Informações de Mortalidade (SIM) do @ministériodasaúde2019, considerando o ano de 2022 – o último com os dados consolidados até a publicação deste conteúdo. Os dados foram coletados com auxílio do pacote `microdatasus` [@saldanha2019] e armazenados pelo pacote `roadtrafficdeaths` [@santosRoadtrafficdeathsRoadTraffic2023].

### Pirâmide etária

```{r}
#| label: calc-vitimas
#| echo: false

obitos_totais <- nrow(obitos2022)

obitos_mulher <- length(obitos2022$sexo_vitima[obitos2022$sexo_vitima == "Feminino"])

percentual_mulher <- scales::percent(obitos_mulher / obitos_totais)

obitos_mulher_20_24 <- obitos2022 |> 
  filter(sexo_vitima == "Feminino") |> 
  count(faixa_etaria_vitima) |> 
  pull(n) |> 
  max()

```

O gráfico da @fig-piramide-etaria a seguir apresenta a pirâmide etária das vítimas fatais no trânsito brasileiro em 2022, agrupados a partir de duas características: faixa etária e sexo da vítima.

Das `r obitos_totais` vítimas fatais de 2022, `r percentual_mulher` eram do sexo feminino. A principal faixa etária das vítimas do sexo feminino é a de idade entre 20 e 24 anos, com `r obitos_mulher_20_24` óbitos.

```{r}
#| label: fig-piramide-etaria
#| echo: false
#| fig-cap: "Pirâmide etária das vítimas fatais no trânsito em 2022"

tbl_piramide <- obitos2022 |> 
  count(sexo_vitima, faixa_etaria_vitima) |> 
  drop_na() |> 
  mutate(
    n = ifelse(sexo_vitima == "Feminino", n = -1 * n, n),
    hovertext = glue("Sexo: {sexo_vitima}\nFaixa etária: {faixa_etaria_vitima}\nQuantidade de óbitos: {abs(n)}")
  )

piramide_plot <- 
  ggplot(
    tbl_piramide, 
    aes(x = n, y = faixa_etaria_vitima, fill = sexo_vitima)
  ) +
  geom_col(aes(text = hovertext)) +
  scale_x_continuous(
    limits = c(-4000, 4000),
    labels = c(4000, 2000, 0, 2000, 4000),
    minor_breaks = NULL
  ) +
  scale_fill_manual(values = c(onsv_palette$blue, onsv_palette$yellow)) +
  labs(x = NULL, y = NULL, fill = "Sexo da vítima:") +
  theme_minimal()

ggplotly(piramide_plot, tooltip = "text")

```

### Modo de transporte e faixa etária

Os gráficos da @fig-heatmap-modal-masc e @fig-heatmap-modal-fem apresentam a quantidade de vítimas fatais, com agrupamento por faixa etária e modo de transporte da vítima. Considerando as vítimas do sexo feminino, o principal grupo de vítimas são as ocupantes de motocicleta com idade entre 20 e 24, somando uma quantidade de 245 óbitos. Outro grupo de destaque são as ocupantes de automóvel entre 25 e 34 anos e as pedestres acima de 60 anos de idade.

```{r}
#| label: heatmap-modal
#| echo: false

tbl_masc <- obitos2022 |> 
  filter(sexo_vitima == "Masculino") |> 
  count(modal_vitima, faixa_etaria_vitima, .drop = FALSE) |> 
  replace_na(list(n = 0)) |> 
  drop_na() |> 
  mutate(
    hovertext = glue(
      "Modal: {modal_vitima}\nFaixa etária: {faixa_etaria_vitima}\nQuantidade de óbitos: {abs(n)}"
    )
  )

tbl_fem <- obitos2022 |> 
  filter(sexo_vitima == "Feminino") |> 
  count(modal_vitima, faixa_etaria_vitima, .drop = FALSE) |> 
  replace_na(list(n = 0)) |> 
  drop_na() |>
  mutate(
    hovertext = glue(
      "Modal: {modal_vitima}\nFaixa etária: {faixa_etaria_vitima}\nQuantidade de óbitos: {abs(n)}"
    )
  )

label_faixa_etaria <- c(
  "0-4", "5-9", "10-14", "15-19", "20-24", "25-29", "30-34", "35-39", "40-44",
  "45-49", "50-54", "55-59", "60-64", "65-69", "70-74", "75-79", "80+"
)
```

::: panel-tabset
## Masculino

```{r}
#| label: fig-heatmap-modal-masc
#| fig-cap: "Quantidade de óbitos por modal e faixa etária (masc.)"
#| echo: false

heat_masc <- 
  ggplot(tbl_masc, aes(x = faixa_etaria_vitima, y = modal_vitima, fill = n)) +
  geom_tile() +
  geom_text(
    aes(label = n),
    color = ifelse(
      tbl_masc$n > 1000,
      "grey90",
      "grey20"
    ),
    size = 3
  ) +
  theme_minimal(base_size = 10) +
  labs(x = "Faixa etária", y = NULL) +
  theme(
    legend.position = "none",
    panel.grid.major.x = element_blank(),
    panel.grid.major.y = element_blank()
  ) +
  scale_fill_gradient(
    high = onsv_palette$yellow,
    low = "#f7dbb9"
  ) +
  scale_x_discrete(labels = label_faixa_etaria) +
  coord_equal()

ggplotly(heat_masc, tooltip = c("x", "y", "fill"))
```

## Feminino

```{r}
#| label: fig-heatmap-modal-fem
#| fig-cap: "Quantidade de óbitos por modal e faixa etária (fem.)"
#| echo: false

heat_fem <- 
  ggplot(tbl_fem, aes(x = faixa_etaria_vitima, y = modal_vitima, fill = n)) +
  geom_tile() +
  geom_text(
    aes(label = n),
    color = ifelse(
      tbl_fem$n > 150,
      "grey90",
      "grey20"
    ),
    size = 3
  ) +
  theme_minimal(base_size = 10) +
  labs(x = "Faixa etária", y = NULL) +
  theme(
    legend.position = "none",
    panel.grid.major.x = element_blank(),
    panel.grid.major.y = element_blank()
  ) +
  scale_fill_gradient(high = onsv_palette$blue, low = "#a2c6d8") +
  scale_x_discrete(labels = label_faixa_etaria) +
  coord_equal()

ggplotly(heat_fem, tooltip = c("x", "y", "fill"))
```
:::

## Condutores habilitados {#sec-condutores-habilitados}

Fonte: @ministériodostransportes2024

### Evolução

```{r}
renach |>
  summarise(.by = c(ano, Sexo),
            condutores = sum(`Qt. Condutor Histórico`)) |>
  ggplot(aes(ano, condutores)) +
  geom_col(aes(fill = Sexo), position = "dodge")

renach |>
  summarise(.by = c(ano, Sexo),
            condutores = sum(`Qt. Condutor Histórico`)) |>
  pivot_wider(names_from = Sexo, values_from = condutores) |>
  mutate(Masculino = Masculino - lag(Masculino),
         Feminino = Feminino - lag(Feminino)) |>
  pivot_longer(c(Masculino, Feminino),
               names_to = "sexo",
               values_to = "condutores") |>
  drop_na() |>
  ggplot(aes(ano, condutores)) +
  geom_col(aes(fill = sexo), position = "dodge")

renach |> 
  rename(
    faixa_etaria = `Faixa Etária`,
    condutores = `Qt. Condutor Histórico`
  ) |> 
  mutate(
    Categoria = if_else(grepl("X", Categoria), 
    "X-Condutor Ciclomotor",
    Categoria)
  ) |> 
  summarise(
    .by = c(ano, Sexo, Categoria), 
    condutores = sum(condutores)
  ) |> 
  ggplot(aes(x = ano, condutores, fill = Categoria)) +
    geom_bar(stat = "identity") +
    facet_wrap(vars(Sexo), scale = "free_y") +
    scale_fill_manual(values = as_vector(unname(onsv_palette))) +
    theme_minimal()
```

<!-- ```{r} -->

<!-- #| label: cnh-categoria -->

<!-- #| echo: false -->

<!-- tbl_categoria <- renach_grouped_2023 |>  -->

<!--   group_by(sexo, categoria) |>  -->

<!--   summarise(qtde_condutor = sum(qtde_condutor)) |>  -->

<!--   pivot_wider(names_from = sexo, values_from = qtde_condutor) |>  -->

<!--   mutate( -->

<!--     total = Feminino + Masculino, -->

<!--     perc_fem = scales::percent(Feminino / (total), accuracy = 1), -->

<!--     perc_masc = scales::percent(Masculino / (total), accuracy = 1), -->

<!--   ) |>  -->

<!--   select(categoria, Feminino, Masculino, perc_fem, perc_masc, total) |>  -->

<!--   ungroup() -->

<!-- knitr::kable( -->

<!--   tbl_categoria, -->

<!--   format.args = list(big.mark = ".", decimal.mark = ","), -->

<!--   format = "pipe", -->

<!--   digits = 0, -->

<!--   col.names = c( -->

<!--     "Categoria", "Feminino", "Masculino", "% Feminino", "% Masculino", "Total" -->

<!--   ), -->

<!--   caption = "Quantidade de Condutores Habilitados em 2023, por categoria" -->

<!-- )  -->

<!-- ``` -->

### Quantidade atual

```{r}
renach |> 
  rename(
    faixa_etaria = `Faixa Etária`,
    condutores = `Qt. Condutor Histórico`
  ) |> 
  filter(ano == "2023") |> 
  mutate(
    Categoria = if_else(grepl("X", Categoria), 
    "X-Condutor Ciclomotor",
    Categoria)
  ) |> 
  summarise(
    .by = c(faixa_etaria, Categoria, Sexo),
    condutores = sum(condutores)
  ) |>  
  ggplot(aes(faixa_etaria, condutores, fill = Categoria)) +
    geom_bar(stat = "identity") +
    facet_wrap(vars(Sexo)) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
    scale_fill_manual(values = as_vector(unname(onsv_palette))) +
    labs(x = NULL, y = NULL) +
    coord_flip()

renach |> 
  rename(
    faixa_etaria = `Faixa Etária`,
    condutores = `Qt. Condutor Histórico`
  ) |> 
  filter(ano == "2023") |> 
  summarise(.by = c(faixa_etaria, Sexo), condutores = sum(condutores)) |> 
  ggplot(aes(condutores, faixa_etaria, fill = Sexo)) +
    geom_col(position = "dodge")

renach |> 
  rename(
    faixa_etaria = `Faixa Etária`,
    condutores = `Qt. Condutor Histórico`
  ) |> 
  filter(ano == "2023") |> 
  mutate(
    Categoria = if_else(grepl("X", Categoria), 
    "X-Condutor Ciclomotor",
    Categoria)
  ) |> 
  summarise(.by = c(Categoria, Sexo), condutores = sum(condutores)) |> 
  ggplot(aes(condutores, Categoria, fill = Sexo)) +
    geom_col(position = "dodge")

renach |> 
  rename(
    faixa_etaria = (`Faixa Etária`),
    condutores = `Qt. Condutor Histórico`
  ) |> 
  filter(ano == "2023") |> 
  mutate(
    Categoria = if_else(grepl("X", Categoria), 
    "X-Condutor Ciclomotor",
    Categoria)
  ) |> 
  mutate(
    faixa_etaria = if_else(
      str_detect(faixa_etaria, "81|91|101|120"), 
      "Mais de 80", faixa_etaria
    ),
    condutores = if_else(Sexo == "Masculino", -condutores, condutores)
  ) |> 
  summarise(
    .by = c(faixa_etaria, Sexo),
    condutores = sum(condutores)
  ) |> 
  mutate(
    hovertext = glue("Faixa Etária: {faixa_etaria} <br> Sexo : {Sexo} <br> Condutores: {abs(condutores)}")
  ) |> 
  ggplot( 
    aes(x = condutores, y = faixa_etaria, fill = Sexo)
  ) +
    geom_col(aes(text = hovertext)) +
    scale_x_continuous(
      limits = c(-15000000, 15000000),
      labels = c(15000000, 10000000, 0, 10000000, 15000000),
      minor_breaks = NULL
    ) +
    scale_fill_manual(values = c(onsv_palette$blue, onsv_palette$yellow)) +
    labs(x = NULL, y = NULL, fill = "Sexo da vítima:") +
    theme_minimal()
```

## Condutores envolvidos em sinistros em rodovias federais {#sec-prf}

<!-- Fonte: @políciarodoviáriafederal2024 -->

### Transporte geral

```{r}
heat_prf_geral <-
  prf_condutores_2023 |>
  summarise(.by = c(tipo_acidente, sexo, estado_fisico),
            n = n()) |>
  drop_na(sexo, tipo_acidente) |>
  complete(
    tipo_acidente = prf_condutores_2023$tipo_acidente,
    sexo = prf_condutores_2023$sexo,
    estado_fisico = prf_condutores_2023$estado_fisico,
    fill = list(n = 0)
  ) |>
  arrange(sexo, tipo_acidente, estado_fisico) |>
  drop_na() |>
  mutate(tipo_acidente = str_to_title(tipo_acidente)) |>
  ggplot(aes(
    estado_fisico,
    tipo_acidente,
    fill = sexo,
    alpha = factor(n)
  )) +
  geom_tile() +
  geom_text(aes(
    label = n,
    color = ifelse(n > 1000 & sexo == "Feminino",
                   "grey90", "black")
  ),
  size = 3,
  alpha = 1) +
  facet_wrap(vars(sexo)) +
  scale_color_identity() +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "none", panel.grid.major = element_blank()) +
  scale_fill_manual(values = as_vector(unname(onsv_palette)))

ggplotly(heat_prf_geral, tooltip = c("x", "y", "fill")) |>
  style(hoverinfo = "none", traces = 1:96)

prf_condutores_2023 |>
  summarise(.by = c(sexo, estado_fisico), n = n()) |>
  drop_na() |>
  pivot_wider(names_from = estado_fisico, values_from = n) |>
  mutate(
    Total = Ferido + Ileso + `Óbito`,
    `Óbitos por N° de Envolvidos` = round(`Óbito` / Total, 4)
  ) |>
  rename(Sexo = sexo) |>
  gt() |>
  fmt_integer(c(Ferido, Ileso, `Óbito`, Total), sep_mark = ".") |>
  fmt_percent(last_col(), dec_mark = ",", sep_mark = ".") |>
  tab_options(
    column_labels.background.color = onsv_palette$blue,
    column_labels.font.weight = "bold"
  )
```

<!-- ```{r} -->

<!-- #| label: prf-count -->

<!-- #| echo: false -->

<!-- prf_count <- prf_condutores_2023 |>  -->

<!--   count(sexo) |>  -->

<!--   drop_na() |>  -->

<!--   mutate( -->

<!--     percentual = n / sum(n), -->

<!--     percentual = scales::percent(percentual, accuracy = 1) -->

<!--   ) -->

<!-- knitr::kable( -->

<!--   prf_count, -->

<!--   format.args = list(big.mark = ".", decimal.mark = ","), -->

<!--   col.names = c( -->

<!--     "Gênero", -->

<!--     "Quantidade de condutores envolvidos", -->

<!--     "Percentual" -->

<!--   ), -->

<!--   caption = "Quantidade de Condutores Envolvidos em Sinistros de Trânsito - Rodovias Federais" -->

<!-- ) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- #| label: prf-regiao -->

<!-- #| echo: false -->

<!-- prf_regiao <- prf_condutores_2023 |>  -->

<!--   count(sexo, regiao) |>  -->

<!--   drop_na() |> -->

<!--   pivot_wider(names_from = sexo, values_from = n) |>  -->

<!--   mutate( -->

<!--     total = Feminino + Masculino, -->

<!--     perc_fem = scales::percent(Feminino / (total), accuracy = 1), -->

<!--     perc_masc = scales::percent(Masculino / (total), accuracy = 1), -->

<!--   ) |>  -->

<!--   select( -->

<!--     regiao, Feminino, Masculino, perc_fem, perc_masc, total -->

<!--   ) -->

<!-- knitr::kable( -->

<!--   prf_regiao, -->

<!--   format.args = list(big.mark = ".", decimal.mark = ","), -->

<!--   col.names = c( -->

<!--     "Região", -->

<!--     "Feminino", -->

<!--     "Masculino", -->

<!--     "% Feminino", -->

<!--     "% Masculino", -->

<!--     "Total" -->

<!--   ), -->

<!--   caption = "Quantidade de Condutores Envolvidos em Sinistros de Trânsito, por Região - Rodovias Federais" -->

<!-- ) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- #| label: prf-lesoes -->

<!-- #| echo: false -->

<!-- prf_lesoes <- prf_condutores_2023 |>  -->

<!--   count(sexo, estado_fisico) |>  -->

<!--   drop_na() |>  -->

<!--   pivot_wider(names_from = sexo, values_from = n) |>  -->

<!--   mutate( -->

<!--     perc_fem = Feminino / sum(Feminino), -->

<!--     perc_fem = scales::percent(perc_fem, accuracy = 1), -->

<!--     perc_masc = Masculino / sum(Masculino), -->

<!--     perc_masc = scales::percent(perc_masc, accuracy = 1) -->

<!--   ) -->

<!-- knitr::kable( -->

<!--   prf_lesoes, -->

<!--   format.args = list(big.mark = ".", decimal.mark = ","), -->

<!--   col.names = c( -->

<!--     "Tipo de lesão", -->

<!--     "Feminino", -->

<!--     "Masculino", -->

<!--     "% por tipo (Fem.)", -->

<!--     "% por tipo (Masc.)" -->

<!--   ), -->

<!--   caption = "Quantidade de Condutores Envolvidos em Sinistros de Trânsito, por tipo de lesão - Rodovias Federais" -->

<!-- ) -->

<!-- ``` -->

### Transporte de cargas

```{r}
heat_prf_transp <-
  prf_condutores_2023 |>
  filter(tipo_veiculo %in% c("caminhão", "caminhão-trator")) |> 
  summarise(.by = c(tipo_acidente, sexo, estado_fisico),
            n = n()) |>
  drop_na(sexo, tipo_acidente) |>
  complete(
    tipo_acidente = prf_condutores_2023$tipo_acidente,
    sexo = prf_condutores_2023$sexo,
    estado_fisico = prf_condutores_2023$estado_fisico,
    fill = list(n = 0)
  ) |>
  arrange(sexo, tipo_acidente, estado_fisico) |>
  drop_na() |>
  mutate(tipo_acidente = str_to_title(tipo_acidente)) |>
  ggplot(aes(
    estado_fisico,
    tipo_acidente,
    fill = sexo,
    alpha = factor(n)
  )) +
  geom_tile() +
  geom_text(aes(
    label = n,
    color = ifelse(n > 1000 & sexo == "Feminino",
                   "grey90", "black")
  ),
  size = 3,
  alpha = 1) +
  facet_wrap(vars(sexo)) +
  scale_color_identity() +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "none", panel.grid.major = element_blank()) +
  scale_fill_manual(values = as_vector(unname(onsv_palette)))

ggplotly(heat_prf_transp, tooltip = c("x", "y", "fill")) |>
  style(hoverinfo = "none", traces = 1:96)

prf_condutores_2023 |>
  filter(tipo_veiculo %in% c("caminhão", "caminhão-trator")) |> 
  summarise(.by = c(sexo, estado_fisico), n = n()) |>
  drop_na() |>
  pivot_wider(names_from = estado_fisico, values_from = n) |>
  mutate(
    Total = Ferido + Ileso + `Óbito`,
    `Óbitos por N° de Envolvidos` = round(`Óbito` / Total, 4)
  ) |>
  rename(Sexo = sexo) |>
  gt() |>
  fmt_integer(c(Ferido, Ileso, `Óbito`, Total), sep_mark = ".") |>
  fmt_percent(last_col(), dec_mark = ",", sep_mark = ".") |>
  tab_options(
    column_labels.background.color = onsv_palette$blue,
    column_labels.font.weight = "bold"
  )
```

<!-- Sinistros de trânsito envolvendo mulheres motoristas de transporte de cargas (Caminhão + Caminhão Trator) -->

<!-- ```{r} -->

<!-- #| label: carga-lesoes -->

<!-- #| echo: false -->

<!-- prf_carga <- prf_condutores_2023 |>  -->

<!--   filter( -->

<!--     sexo == "Feminino", tipo_veiculo %in% c("caminhão", "caminhão-trator") -->

<!--   ) -->

<!-- prf_carga |>  -->

<!--   count(estado_fisico) |>  -->

<!--   knitr::kable( -->

<!--     col.names = c("Tipo de lesão", "Quantidade de condutoras envolvidas"), -->

<!--     caption = "Quantidade de condutoras envolvidas em sinistros de trânsito - tipo de lesão" -->

<!--   ) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- #| label: carga-tipo -->

<!-- #| echo: false -->

<!-- prf_carga |>  -->

<!--   count(tipo_acidente, sort = TRUE) |>  -->

<!--   knitr::kable( -->

<!--     col.names = c("Tipo de sinistro", "Quantidade de condutoras envolvidas"), -->

<!--     caption = "Quantidade de condutoras envolvidas - tipo de sinistro" -->

<!--   ) -->

<!-- ``` -->

### Transporte de passageiros

```{r}
heat_prf_pass <- 
  prf_condutores_2023 |>
  filter(tipo_veiculo %in% c("ônibus", "microônibus")) |> 
  summarise(.by = c(tipo_acidente, sexo, estado_fisico),
            n = n()) |>
  drop_na(sexo, tipo_acidente) |>
  complete(
    tipo_acidente = prf_condutores_2023$tipo_acidente,
    sexo = prf_condutores_2023$sexo,
    estado_fisico = prf_condutores_2023$estado_fisico,
    fill = list(n = 0)
  ) |>
  arrange(sexo, tipo_acidente, estado_fisico) |>
  drop_na() |>
  mutate(tipo_acidente = str_to_title(tipo_acidente)) |>
  ggplot(aes(
    estado_fisico,
    tipo_acidente,
    fill = sexo,
    alpha = factor(n)
  )) +
  geom_tile() +
  geom_text(aes(
    label = n,
    color = ifelse(n > 1000 & sexo == "Feminino",
                   "grey90", "black")
  ),
  size = 3,
  alpha = 1) +
  facet_wrap(vars(sexo)) +
  scale_color_identity() +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "none", panel.grid.major = element_blank()) +
  scale_fill_manual(values = as_vector(unname(onsv_palette)))

ggplotly(heat_prf_pass, tooltip = c("x", "y", "fill")) |>
  style(hoverinfo = "none", traces = 1:96)

prf_condutores_2023 |>
  filter(tipo_veiculo %in% c("ônibus", "microônibus")) |>
  summarise(.by = c(sexo, estado_fisico), n = n()) |>
  drop_na() |>
  pivot_wider(names_from = estado_fisico, values_from = n) |>
  mutate(across(everything(), ~replace_na( ., 0))) |>  
  mutate(
    Total = Ferido + Ileso + `Óbito`,
    `Óbitos por N° de Envolvidos` = round(`Óbito` / Total, 4)
  ) |>
  rename(Sexo = sexo) |> 
  gt() |>
  fmt_integer(c(Ferido, Ileso, `Óbito`, Total), sep_mark = ".") |>
  fmt_percent(last_col(), dec_mark = ",", sep_mark = ".") |> 
  tab_options(
    column_labels.background.color = onsv_palette$blue,
    column_labels.font.weight = "bold"
  )
```


<!-- Sinistros de trânsito envolvendo mulheres motoristas de transporte de passageiros (Ônibus + Microônibus) -->

<!-- ```{r} -->

<!-- #| label: passageiro-lesoes -->

<!-- #| echo: false -->

<!-- prf_passageiro <- prf_condutores_2023 |>  -->

<!--   filter( -->

<!--     sexo == "Feminino", tipo_veiculo %in% c("ônibus", "microônibus") -->

<!--   ) -->

<!-- prf_passageiro |>  -->

<!--   count(estado_fisico) |>  -->

<!--   knitr::kable( -->

<!--     col.names = c("Tipo de lesão", "Quantidade de condutoras envolvidas"), -->

<!--     caption = "Quantidade de condutoras envolvidas em sinistros de trânsito - tipo de lesão" -->

<!--   ) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- #| label: passageiro-tipo -->

<!-- #| echo: false -->

<!-- prf_passageiro |>  -->

<!--   count(tipo_acidente, sort = TRUE) |>  -->

<!--   knitr::kable( -->

<!--     col.names = c("Tipo de sinistro", "Quantidade de condutoras envolvidas"), -->

<!--     caption = "Quantidade de condutoras envolvidas - tipo de sinistro" -->

<!--   ) -->

<!-- ``` -->

## Referências {.unnumbered}
